Generation:
5

Phenotype:
def p():
  x = 0.0
  n = 83
  b = 135
  c = sum(PX_HIGH[-n:])/n
  if 0.5 < PX_OPEN[118]:
    x = (x - 0.3)
  n = 5
  b = 152
  c = 0.8
  if c < PX_LOW[-1]:
    x = 0.9
  n = 170
  b = 191
  c = PX_LOW[-1]
  if c < PX_LOW[b]:
    x = (x - 0.4)
  n = 18
  b = 44
  c = sum(PX_HIGH[-n:])/n
  if PX_OPEN[-1] < sum(PX_OPEN[-n:])/n:
    x = (x * 0.5)
  return x
XXX_output_XXX = p()

Genotype:
[7063, 39961, 64307, 64780, 98028, 38312, 5411, 52185, 30066, 96724, 39409, 8445, 13363, 26392, 88062, 20580, 13911, 32476, 78006, 47617, 18834, 66668, 96413, 42892, 24929, 30120, 84067, 10730, 26492, 38437, 39757, 34669, 29187, 55416, 77814, 38807, 44449, 49414, 24792, 9958, 95202, 25458, 91088, 58940, 97855, 88164, 17257, 89647, 77810, 75319, 93770, 4619, 91043, 251, 48787, 16564, 53400, 96701, 59092, 76915, 62688, 47639, 34537, 92990, 13586, 30352, 33682, 17557, 49064, 12076, 6028, 30903, 73449, 74951, 16566, 65700, 32564, 34669, 93986, 1915, 99212, 58840, 38064, 17172, 70942, 37360, 74499, 46580, 86397, 20122, 22249, 41951, 87473, 18481, 55977, 73248]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<code> (<a> n =  (<n> 83)) {::} (<b> b =  (<n> 135)) {::} (<c> c =  (<data> (<n_avg> sum(PX_HIGH[-n:])/n))) {::} (<if> if  (<data> (<const> 0.5))   (<eval> <)   (<data> (<point> PX_OPEN[ (<n> 118) ])) :{:x =  (<expr> (x -  (<const> 0.3) )) :}) {::} (<code> (<a> n =  (<n> 5)) {::} (<b> b =  (<n> 152)) {::} (<c> c =  (<data> (<const> 0.8))) {::} (<if> if c  (<eval> <)   (<data> (<point_today> PX_LOW[-1])) :{:x =  (<expr> (<const> 0.9)) :})) {::} (<code> (<a> n =  (<n> 170)) {::} (<b> b =  (<n> 191)) {::} (<c> c =  (<data> (<point_today> PX_LOW[-1]))) {::} (<if> if c  (<eval> <)   (<data> (<point> PX_LOW[b])) :{:x =  (<expr> (x -  (<const> 0.4) )) :})) {::} (<code> (<a> n =  (<n> 18)) {::} (<b> b =  (<n> 44)) {::} (<c> c =  (<data> (<n_avg> sum(PX_HIGH[-n:])/n))) {::} (<if> if  (<data> (<point_today> PX_OPEN[-1]))   (<eval> <)   (<data> (<n_avg> sum(PX_OPEN[-n:])/n)) :{:x =  (<expr> (x *  (<const> 0.5) )) :}))) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Training fitness:
563323.551413
Test fitness:
15488.4189325