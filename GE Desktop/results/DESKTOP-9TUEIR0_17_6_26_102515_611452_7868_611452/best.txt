Generation:
5

Phenotype:
def p():
  x = 0.0
  n = 215
  for i in [5, 1, 3, 2, 5, 2, 1, 4, 4, 6]:
    if PX_OPEN[43] + PX_HIGH[27] + PX_LOW[64] < PX_OPEN[222] + PX_OPEN[98] + PX_OPEN[60] + PX_HIGH[163] / sum(PX_OPEN[-n:])/n:
      for i in [6, 6, 4, 0, 1]:
        if sum(PX_LOW[-n:])/n < PX_LOW[163]:
          x = x
        for i in [1]:
          n = 62
          x = x
        if sum(PX_HIGH[-n:])/n < sum(PX_OPEN[-n:])/n:
          x = x
        n = 227
        x = (x + 0.3)
      if PX_LOW[133] + PX_HIGH[51] + PX_OPEN[40] < sum(PX_HIGH[-n:])/n:
        n = 169
        if PX_HIGH[153] < PX_HIGH[3]:
          x = x
  return x
XXX_output_XXX = p()

Genotype:
[53278, 66302, 22793, 82613, 82625, 7674, 56485, 49565, 48368, 379, 58248, 88423, 24518, 19179, 42250, 37766, 57603, 91975, 87786, 66888, 25402, 65493, 92791, 52594, 21721, 16955, 46390, 53995, 87585, 74941, 5333, 62857, 94193, 5311, 91888, 19402, 68007, 3695, 24926, 30356, 13388, 97336, 94355, 13091, 40731, 88234, 99709, 37081, 36156, 47009, 81466, 18248, 4800, 92654, 39322, 23728, 54850, 40581, 57431, 26553, 41913, 55756, 23553, 47089, 41619, 53237, 16021, 43938, 20310, 84961, 95426, 90943, 90739, 41865, 25363, 69565, 46943, 7591, 26249, 42173, 42431, 76111, 4287, 80463, 29711, 41847, 90125, 65520, 96045, 39510, 75744, 64919, 83201, 79776, 1639, 77125, 51086, 63637, 62868, 62433, 85926, 90203, 97263, 87680, 26837, 31068, 25499, 81885, 3533, 22238, 41629, 53380, 76786, 17941, 77207, 55932, 96319, 66545, 44050, 8936, 12480, 58376, 49578, 86651, 89740, 26785, 84194, 26260, 64441, 69621, 97087, 5183, 55782, 18789, 15312, 44268, 31347, 34342, 23843, 99344, 75795, 19474, 36196, 46291, 44571, 74722, 36196, 8287, 98988, 921, 59150, 86000, 68193, 46045, 86725, 12789, 59593, 58604, 58858, 26229, 93528, 80180, 96468, 27386, 78696, 14510, 50853, 42120, 58503, 58378, 43037, 76885, 77271, 42832, 97083, 24796, 28979, 40385, 64713, 36738, 11016, 12498, 11684, 25809, 49956, 3105, 41321, 59311, 3485, 36885, 82613, 59871, 95464, 26773, 75897, 88955, 70793, 11569, 61143, 47345, 32422, 789, 22640, 81855, 39424, 69272, 1450, 80674, 5481, 61236, 29438, 20707, 83602, 54440, 89334, 22878, 59087, 37833, 51993, 98429, 11010, 87323, 17576, 1374, 19546, 58203, 8902, 79790, 85318, 10729, 38161, 14906, 60440, 18380, 93809, 72718, 28945, 67162, 86460, 52159, 26605, 35854, 5831, 63976, 6373, 46610, 63513, 80100, 52525, 38461, 64945, 51790, 2894, 38114, 19105, 41534, 48221, 95522, 91504, 89379, 67415]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<a> n =  (<n> 215)) {::} (<code> (<stmt> (<for> for i in  (<seq> [ (<csitems> (<item> (<i> 5)) ,  (<csitems> (<item> (<i> 1)) ,  (<csitems> (<item> (<i> 3)) ,  (<csitems> (<item> (<i> 2)) ,  (<csitems> (<item> (<i> 5)) ,  (<csitems> (<item> (<i> 2)) ,  (<csitems> (<item> (<i> 1)) ,  (<csitems> (<item> (<i> 4)) ,  (<csitems> (<item> (<i> 4)) ,  (<csitems> (<item> (<i> 6)))))))))))) ]) :{: (<code> (<stmt> (<if> if  (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<sum> (<point> PX_OPEN[ (<n> 43) ])  +  (<sum> (<point> PX_HIGH[ (<n> 27) ])  +  (<point> PX_LOW[ (<n> 64) ]))))))))))   (<eval> <)   (<data> (<combo> (<data> (<sum> (<point> PX_OPEN[ (<n> 222) ])  +  (<sum> (<point> PX_OPEN[ (<n> 98) ])  +  (<sum> (<point> PX_OPEN[ (<n> 60) ])  +  (<point> PX_HIGH[ (<n> 163) ])))))   (<combine> /)   (<data> (<combo> (<data> (<combo> (<data> (<n_avg> sum(PX_OPEN[-n:])/n)))))))) :{: (<code> (<stmt> (<for> for i in  (<seq> [ (<csitems> (<item> (<i> 6)) ,  (<csitems> (<item> (<i> 6)) ,  (<csitems> (<item> (<i> 4)) ,  (<csitems> (<item> (<i> 0)) ,  (<csitems> (<item> (<i> 1))))))) ]) :{: (<code> (<stmt> (<if> if  (<data> (<n_avg> sum(PX_LOW[-n:])/n))   (<eval> <)   (<data> (<point> PX_LOW[ (<n> 163) ])) :{: (<code> (<stmt> x =  (<expr> x))) :})) {::} (<code> (<stmt> (<for> for i in  (<seq> [ (<csitems> (<item> (<i> 1))) ]) :{: (<code> (<a> n =  (<n> 62)) {::} (<code> (<stmt> x =  (<expr> x)))) :})) {::} (<code> (<stmt> (<if> if  (<data> (<n_avg> sum(PX_HIGH[-n:])/n))   (<eval> <)   (<data> (<n_avg> sum(PX_OPEN[-n:])/n)) :{: (<code> (<stmt> x =  (<expr> x))) :})) {::} (<code> (<a> n =  (<n> 227)) {::} (<code> (<stmt> x =  (<expr> (x +  (<const> 0.3) )))))))) :})) {::} (<code> (<stmt> (<if> if  (<data> (<sum> (<point> PX_LOW[ (<n> 133) ])  +  (<sum> (<point> PX_HIGH[ (<n> 51) ])  +  (<point> PX_OPEN[ (<n> 40) ]))))   (<eval> <)   (<data> (<combo> (<data> (<n_avg> sum(PX_HIGH[-n:])/n)))) :{: (<code> (<a> n =  (<n> 169)) {::} (<code> (<stmt> (<if> if  (<data> (<point> PX_HIGH[ (<n> 153) ]))   (<eval> <)   (<data> (<point> PX_HIGH[ (<n> 3) ])) :{: (<code> (<stmt> x =  (<expr> x))) :})))) :})))) :}))) :}))) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Training fitness:
742336.506616
Test fitness:
11638.2438041