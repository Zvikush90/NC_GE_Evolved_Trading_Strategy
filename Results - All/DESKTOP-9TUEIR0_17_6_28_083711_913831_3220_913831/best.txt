Generation:
5

Phenotype:
def p():
  x = 0.0
  n = 41
  b = 150
  c = sum(PX_HIGH[-n:])/n + PX_LOW[b]
  if PX_HIGH[b] < sum(PX_LOW[-n:])/n + sum(PX_OPEN[-n:])/n:
    x = (x * 1.0)
  n = 130
  b = 143
  c = sum(PX_OPEN[-n:])/n
  if PX_OPEN[220] > PX_LOW[239]:
    x = 1.0
  n = 155
  b = 109
  c = sum(PX_HIGH[-n:])/n
  if c < PX_HIGH[-1]:
    x = (x - 0.2)
  n = 201
  b = 71
  c = PX_OPEN[b]
  if c > PX_LOW[-1]:
    x = (x - 0.6)
  n = 24
  b = 239
  c = PX_LOW[-1]
  if c < PX_LOW[121]:
    x = 0.3
  n = 26
  b = 15
  c = PX_LOW[-1]
  if sum(PX_LOW[-n:])/n > PX_LOW[b]:
    x = (x / 0.1)
  n = 37
  b = 100
  c = PX_LOW[b]
  if PX_LOW[b] < PX_LOW[-1]:
    x = (x / 0.1)
  return x
XXX_output_XXX = p()

Genotype:
[28467, 58963, 93586, 3306, 29365, 5106, 70623, 82783, 58944, 18314, 52131, 56129, 57520, 59464, 85653, 81986, 65706, 47258, 75044, 60680, 69387, 34560, 50694, 45518, 80848, 18790, 1714, 42605, 93329, 19511, 8111, 50182, 30284, 23385, 90635, 69760, 15770, 54345, 31026, 18904, 91560, 25429, 23217, 21852, 13420, 52658, 13859, 6836, 87820, 9184, 70317, 58646, 55159, 32752, 39805, 39965, 42635, 27630, 45389, 75885, 40791, 38573, 13697, 86229, 24710, 59781, 36416, 90180, 90435, 24930, 50233, 58619, 90869, 46992, 84024, 27273, 84521, 90683, 81071, 10487, 54192, 9160, 49015, 66522, 49965, 29986, 48585, 76336, 29492, 59899, 35672, 90797, 24363, 74743, 8248, 93092, 63451, 33824, 3191, 83797, 95530, 78353, 2860, 61701, 76543, 73496, 93237, 97748, 73786, 33649, 86410, 95803, 38975, 80728, 70436, 30476, 74645, 11798, 2932, 46148, 20764, 60879, 26979, 1245, 89392, 77022, 46126, 67614, 34730, 31197, 72925, 61772, 98956, 55243, 79184, 38467, 39905, 38112, 89590, 2319, 66654, 21501, 98346, 11735, 97934, 40080, 60039, 59869, 97472, 29378, 77711, 38901, 76033, 1400, 89247, 33871, 66903, 46064, 24424, 4593, 36758, 5547, 74653, 54738, 39960, 56884, 96643, 93089, 46685, 1562, 3913, 44139, 89146, 89014, 20725, 58628, 38145, 20254, 64642, 62955, 81897, 89982, 38710]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<code> (<a> n =  (<n> 41)) {::} (<b> b =  (<n> 150)) {::} (<c> c =  (<data> (<combo> (<data> (<n_avg> sum(PX_HIGH[-n:])/n))   (<combine> +)   (<data> (<point> PX_LOW[b]))))) {::} (<if> if  (<data> (<point> PX_HIGH[b]))   (<eval> <)   (<data> (<combo> (<data> (<n_avg> sum(PX_LOW[-n:])/n))   (<combine> +)   (<data> (<n_avg> sum(PX_OPEN[-n:])/n)))) :{:x =  (<expr> (x *  (<const> 1.0) )) :}) {::} (<code> (<a> n =  (<n> 130)) {::} (<b> b =  (<n> 143)) {::} (<c> c =  (<data> (<n_avg> sum(PX_OPEN[-n:])/n))) {::} (<if> if  (<data> (<point> PX_OPEN[ (<n> 220) ]))   (<eval> >)   (<data> (<point> PX_LOW[ (<n> 239) ])) :{:x =  (<expr> (<const> 1.0)) :}) {::} (<code> (<a> n =  (<n> 155)) {::} (<b> b =  (<n> 109)) {::} (<c> c =  (<data> (<n_avg> sum(PX_HIGH[-n:])/n))) {::} (<if> if c  (<eval> <)   (<data> (<point_today> PX_HIGH[-1])) :{:x =  (<expr> (x -  (<const> 0.2) )) :})) {::} (<code> (<a> n =  (<n> 201)) {::} (<b> b =  (<n> 71)) {::} (<c> c =  (<data> (<point> PX_OPEN[b]))) {::} (<if> if c  (<eval> >)   (<data> (<point_today> PX_LOW[-1])) :{:x =  (<expr> (x -  (<const> 0.6) )) :}))) {::} (<code> (<a> n =  (<n> 24)) {::} (<b> b =  (<n> 239)) {::} (<c> c =  (<data> (<point_today> PX_LOW[-1]))) {::} (<if> if c  (<eval> <)   (<data> (<point> PX_LOW[ (<n> 121) ])) :{:x =  (<expr> (<const> 0.3)) :}) {::} (<code> (<a> n =  (<n> 26)) {::} (<b> b =  (<n> 15)) {::} (<c> c =  (<data> (<point_today> PX_LOW[-1]))) {::} (<if> if  (<data> (<n_avg> sum(PX_LOW[-n:])/n))   (<eval> >)   (<data> (<point> PX_LOW[b])) :{:x =  (<expr> (x /  (<const> 0.1) )) :})) {::} (<code> (<a> n =  (<n> 37)) {::} (<b> b =  (<n> 100)) {::} (<c> c =  (<data> (<point> PX_LOW[b]))) {::} (<if> if  (<data> (<point> PX_LOW[b]))   (<eval> <)   (<data> (<point_today> PX_LOW[-1])) :{:x =  (<expr> (x /  (<const> 0.1) )) :})))) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Training fitness:
28427.3200572
Test fitness:
9430.85596165