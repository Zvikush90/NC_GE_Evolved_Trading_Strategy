Generation:
0

Phenotype:
def p():
  x = 0.0
  n = 240
  b = 34
  c = sum(PX_LOW[-n:])/n
  if c > sum(PX_OPEN[-n:])/n:
    x = 0.8
  n = 123
  b = 111
  c = PX_HIGH[-1]
  if PX_OPEN[b] < PX_HIGH[b]:
    x = (x * 0.2)
  n = 240
  b = 216
  c = PX_OPEN[-1]
  if c > PX_HIGH[b]:
    x = (x + 1.0)
  return x
XXX_output_XXX = p()

Genotype:
[42275, 53741, 33437, 74606, 22027, 11842, 35872, 76029, 5225, 50941, 19192, 72436, 58315, 43114, 11597, 52564, 27216, 79907, 51656, 24570, 17078, 52392, 43536, 1067, 17682, 12810, 37981, 4350, 9861, 7525, 55938, 47844, 83991, 78302, 76006, 15340, 653, 48831, 70350, 59947, 34351, 17070, 91377, 5629, 72551, 18978, 3634, 18601, 77406, 12998, 92025, 70545, 94407, 9754, 8796, 75319, 70141, 48429, 82019, 46167, 49563, 5860, 36447, 19650, 31751, 98892, 16137, 10577, 37457, 26053]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<code> (<a> n =  (<n> 240)) {::} (<b> b =  (<n> 34)) {::} (<c> c =  (<data> (<n_avg> sum(PX_LOW[-n:])/n))) {::} (<if> if c  (<eval> >)   (<data> (<n_avg> sum(PX_OPEN[-n:])/n)) :{:x =  (<expr> (<const> 0.8)) :}) {::} (<code> (<a> n =  (<n> 123)) {::} (<b> b =  (<n> 111)) {::} (<c> c =  (<data> (<point_today> PX_HIGH[-1]))) {::} (<if> if  (<data> (<point> PX_OPEN[b]))   (<eval> <)   (<data> (<point> PX_HIGH[b])) :{:x =  (<expr> (x *  (<const> 0.2) )) :})) {::} (<code> (<a> n =  (<n> 240)) {::} (<b> b =  (<n> 216)) {::} (<c> c =  (<data> (<point_today> PX_OPEN[-1]))) {::} (<if> if c  (<eval> >)   (<data> (<point> PX_HIGH[b])) :{:x =  (<expr> (x +  (<const> 1.0) )) :}))) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Fitness:
55795.7102271