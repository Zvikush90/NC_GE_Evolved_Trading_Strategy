Generation:
10

Phenotype:
def p():
  x = 0.0
  if PX_HIGH[236] + PX_OPEN[70] > PX_LOW[213] + PX_LOW[50]:
    x = 1.0
    x = x
  for i in range(5+1):
    x = x
  return x
XXX_output_XXX = p()

Genotype:
[3491, 58763, 67888, 84441, 92480, 33482, 70122, 18921, 43776, 75936, 12696, 90958, 97750, 78912, 99967, 15120, 60856, 35568, 63848, 95612, 2181, 67868, 20454, 4519, 71051, 86851, 85619, 16718, 98859, 35474, 19936, 6712, 14820, 21619, 4038, 46619, 50296, 13607, 78749, 83027, 22709, 55189, 48602, 10927, 2027, 56097, 5509, 20291, 55561, 38116, 32644]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<code> (<stmt> (<if> if  (<data> (<sum> (<point> PX_HIGH[ (<n> 236) ])  +  (<point> PX_OPEN[ (<n> 70) ])))   (<eval> >)   (<data> (<sum> (<point> PX_LOW[ (<n> 213) ])  +  (<point> PX_LOW[ (<n> 50) ]))) :{: (<code> (<stmt> x =  (<expr> (<const> 1.0))) {::} (<code> (<stmt> x =  (<expr> x)))) :})) {::} (<code> (<stmt> (<for> for i in  (<seq> range( (<i> 5) +1)) :{: (<code> (<stmt> x =  (<expr> x))) :})))) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Training fitness:
1285714.10783
Test fitness:
12949.9619989