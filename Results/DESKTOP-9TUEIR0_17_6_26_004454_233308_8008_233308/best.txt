Generation:
10

Phenotype:
def p():
  x = 0.0
  n = 230
  n = 174
  if PX_LOW[33] + PX_LOW[33] + PX_HIGH[77] + PX_LOW[149] + PX_OPEN[144] + PX_OPEN[242] > PX_HIGH[243] + PX_HIGH[185] + PX_HIGH[12] + PX_OPEN[185] + PX_LOW[110]:
    for i in [1]:
      for i in [6, 6]:
        x = (x + 0.1)
      if sum(PX_LOW[-n:])/n == PX_HIGH[91]:
        x = 0.3
        x = x
      n = 170
      n = 221
      n = 29
      x = x
  return x
XXX_output_XXX = p()

Genotype:
[8632, 47909, 58374, 49925, 9061, 16466, 4470, 35042, 61976, 31204, 78486, 10242, 95376, 16709, 14549, 54027, 38807, 38655, 74505, 65875, 35491, 18634, 23792, 95255, 11875, 23092, 41292, 99707, 35864, 81883, 24954, 64355, 13920, 7659, 77298, 77362, 95677, 40909, 56807, 37841, 5207, 61704, 52376, 46877, 51768, 47494, 93041, 65037, 94343, 17945, 2865, 99399, 83185, 6617, 5458, 48985, 20186, 62726, 19463, 38241, 47212, 68892, 7571, 82925, 39096, 79125, 39198, 84317, 97167, 85744, 47012, 34002, 15012, 12962, 34748, 29107, 2789, 18760, 35573, 76663, 52735, 97858, 34627, 31059, 26040, 3794, 20005, 60777, 8996, 44205, 6581, 28230, 70958, 24352, 58314, 84790, 35322, 95850, 70032, 52013, 18471, 4450, 29657, 80024, 89582, 1634, 51539, 71091, 20887, 48606, 85709, 39670, 2744, 39794, 51239, 23023, 27248, 28173, 4054, 4816, 32000, 46274, 38565, 65357, 66517, 70685, 91328, 8152, 27175, 46428, 21662, 28478, 77647, 7712, 78404, 4668, 47713, 92425, 89101, 18010, 70400, 96252, 41578, 89476, 30393, 11104, 83677]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<a> n =  (<n> 230)) {::} (<code> (<a> n =  (<n> 174)) {::} (<code> (<stmt> (<if> if  (<data> (<sum> (<point> PX_LOW[ (<n> 33) ])  +  (<sum> (<point> PX_LOW[ (<n> 33) ])  +  (<sum> (<point> PX_HIGH[ (<n> 77) ])  +  (<sum> (<point> PX_LOW[ (<n> 149) ])  +  (<sum> (<point> PX_OPEN[ (<n> 144) ])  +  (<point> PX_OPEN[ (<n> 242) ])))))))   (<eval> >)   (<data> (<combo> (<data> (<sum> (<point> PX_HIGH[ (<n> 243) ])  +  (<sum> (<point> PX_HIGH[ (<n> 185) ])  +  (<sum> (<point> PX_HIGH[ (<n> 12) ])  +  (<sum> (<point> PX_OPEN[ (<n> 185) ])  +  (<point> PX_LOW[ (<n> 110) ])))))))) :{: (<code> (<stmt> (<for> for i in  (<seq> [ (<csitems> (<item> (<i> 1))) ]) :{: (<code> (<stmt> (<for> for i in  (<seq> [ (<csitems> (<item> (<i> 6)) ,  (<csitems> (<item> (<i> 6)))) ]) :{: (<code> (<stmt> x =  (<expr> (x +  (<const> 0.1) )))) :})) {::} (<code> (<stmt> (<if> if  (<data> (<combo> (<data> (<n_avg> sum(PX_LOW[-n:])/n))))   (<eval> ==)   (<data> (<point> PX_HIGH[ (<n> 91) ])) :{: (<code> (<stmt> x =  (<expr> (<const> 0.3))) {::} (<code> (<stmt> x =  (<expr> x)))) :})) {::} (<code> (<a> n =  (<n> 170)) {::} (<code> (<a> n =  (<n> 221)) {::} (<code> (<a> n =  (<n> 29)) {::} (<code> (<stmt> x =  (<expr> x)))))))) :}))) :})))) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Training fitness:
1201100.85277
Test fitness:
15488.4189325