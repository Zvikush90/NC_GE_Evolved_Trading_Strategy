Generation:
6

Phenotype:
def p():
  x = 0.0
  n = 234
  if PX_HIGH[60] + PX_LOW[49] + PX_HIGH[244] + PX_LOW[23] + PX_LOW[86] + PX_LOW[26] + PX_HIGH[132] + PX_OPEN[58] - PX_LOW[91] + PX_LOW[45] + PX_HIGH[201] + PX_OPEN[19] + PX_OPEN[96] + PX_HIGH[60] + PX_LOW[25] < PX_OPEN[206] + PX_OPEN[154] + PX_OPEN[164] + PX_HIGH[0] + PX_OPEN[42] + PX_LOW[79] * PX_LOW[229] + PX_OPEN[221] + PX_LOW[152] + PX_HIGH[200] ** PX_LOW[123] + PX_OPEN[130] + PX_HIGH[172] + PX_OPEN[56] + PX_OPEN[63] + PX_HIGH[216] - PX_LOW[177] + PX_LOW[41] - PX_LOW[41] + PX_LOW[77]:
    for i in [2, 4, 4, 0, 6]:
      n = 168
      n = 59
      x = (x + 0.6)
  return x
XXX_output_XXX = p()

Genotype:
[98034, 5063, 65514, 67691, 67126, 63859, 7368, 50050, 43089, 20875, 67507, 53455, 90883, 84822, 23751, 69036, 25204, 15558, 9751, 91407, 10911, 54862, 32637, 64362, 14041, 95622, 54831, 69622, 11101, 93153, 67189, 39297, 10997, 85406, 9293, 25973, 65796, 98663, 33950, 99941, 96770, 87817, 75075, 58336, 77795, 96757, 50079, 6177, 34751, 89746, 83122, 65642, 50479, 17266, 38748, 71400, 683, 76456, 87803, 19748, 67249, 76597, 39112, 45999, 20791, 64527, 60356, 21213, 88905, 21750, 55204, 54054, 2502, 9198, 55625, 70841, 71966, 8148, 31278, 39069, 27277, 37807, 58217, 41805, 50601, 49226, 62858, 51324, 1932, 75782, 46719, 76318, 75962, 21913, 60330, 25998, 86466, 25596, 66820, 35911, 44615, 63743, 55654, 26850, 38381, 22960, 72054, 5650, 17730, 97202, 50561, 33535, 24764, 44267, 17937, 48485, 64757, 19886, 20796, 26059, 615, 14163, 22359, 74405, 53179, 32576, 70873, 3649, 18130, 67692, 85785, 24585, 98531, 90412, 46248, 90844, 53295, 8690, 55637, 17499, 85685, 92131, 25992, 40521, 73604, 3261, 34294, 59010, 75285, 13328, 19229, 34626, 45417, 27263, 37859, 33758, 80065, 62746, 97370, 87728, 547, 425, 20482, 17777, 34066, 28296, 74440, 16528, 92017, 5296, 23920, 56013, 77327, 59611, 32034, 15943, 79273, 16832, 29827, 75707, 88737, 45852, 86912, 25310, 35008, 58646, 12963, 38276, 45845, 74316, 78362, 47843, 8689, 39075, 73042, 93076, 46338, 55782, 36208, 20769, 58655, 92074, 22429, 20637, 13295, 97828, 69049, 71944, 12063, 25471, 24145, 52732, 70786, 89552, 32402, 72739, 96495, 60276, 20406, 31744, 50283, 21244, 77607, 96448, 13828, 83634, 17344, 14458, 8246, 87425, 7678, 84115, 23379, 95171, 69586, 31449, 2206, 26447, 9287, 60501]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<a> n =  (<n> 234)) {::} (<code> (<stmt> (<if> if  (<data> (<combo> (<data> (<combo> (<data> (<sum> (<point> PX_HIGH[ (<n> 60) ])  +  (<sum> (<point> PX_LOW[ (<n> 49) ])  +  (<sum> (<point> PX_HIGH[ (<n> 244) ])  +  (<sum> (<point> PX_LOW[ (<n> 23) ])  +  (<sum> (<point> PX_LOW[ (<n> 86) ])  +  (<sum> (<point> PX_LOW[ (<n> 26) ])  +  (<sum> (<point> PX_HIGH[ (<n> 132) ])  +  (<point> PX_OPEN[ (<n> 58) ])))))))))))   (<combine> -)   (<data> (<sum> (<point> PX_LOW[ (<n> 91) ])  +  (<sum> (<point> PX_LOW[ (<n> 45) ])  +  (<sum> (<point> PX_HIGH[ (<n> 201) ])  +  (<sum> (<point> PX_OPEN[ (<n> 19) ])  +  (<sum> (<point> PX_OPEN[ (<n> 96) ])  +  (<sum> (<point> PX_HIGH[ (<n> 60) ])  +  (<point> PX_LOW[ (<n> 25) ]))))))))))   (<eval> <)   (<data> (<combo> (<data> (<sum> (<point> PX_OPEN[ (<n> 206) ])  +  (<sum> (<point> PX_OPEN[ (<n> 154) ])  +  (<sum> (<point> PX_OPEN[ (<n> 164) ])  +  (<sum> (<point> PX_HIGH[ (<n> 0) ])  +  (<sum> (<point> PX_OPEN[ (<n> 42) ])  +  (<point> PX_LOW[ (<n> 79) ])))))))   (<combine> *)   (<data> (<combo> (<data> (<combo> (<data> (<sum> (<point> PX_LOW[ (<n> 229) ])  +  (<sum> (<point> PX_OPEN[ (<n> 221) ])  +  (<sum> (<point> PX_LOW[ (<n> 152) ])  +  (<point> PX_HIGH[ (<n> 200) ])))))   (<combine> **)   (<data> (<sum> (<point> PX_LOW[ (<n> 123) ])  +  (<sum> (<point> PX_OPEN[ (<n> 130) ])  +  (<sum> (<point> PX_HIGH[ (<n> 172) ])  +  (<sum> (<point> PX_OPEN[ (<n> 56) ])  +  (<sum> (<point> PX_OPEN[ (<n> 63) ])  +  (<point> PX_HIGH[ (<n> 216) ])))))))))   (<combine> -)   (<data> (<combo> (<data> (<sum> (<point> PX_LOW[ (<n> 177) ])  +  (<point> PX_LOW[ (<n> 41) ])))   (<combine> -)   (<data> (<sum> (<point> PX_LOW[ (<n> 41) ])  +  (<point> PX_LOW[ (<n> 77) ]))))))))) :{: (<code> (<stmt> (<for> for i in  (<seq> [ (<csitems> (<item> (<i> 2)) ,  (<csitems> (<item> (<i> 4)) ,  (<csitems> (<item> (<i> 4)) ,  (<csitems> (<item> (<i> 0)) ,  (<csitems> (<item> (<i> 6))))))) ]) :{: (<code> (<a> n =  (<n> 168)) {::} (<code> (<a> n =  (<n> 59)) {::} (<code> (<stmt> x =  (<expr> (x +  (<const> 0.6) )))))) :}))) :}))) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Fitness:
810203.305227